1. Login: You should be able to login to the server via ssh. The name of the server is rolf.ifi.uzh.ch.
You need to login with your username that have been sent to you by the admin team, and the password that you have chosen.
NOTE: This is not your UZH login.

2. Technical Details: The server has 8 GeForce RTXâ„¢ 2080 Ti Turbo 11G GPUs designed for deep learning,
128 CPU cores (threads) and 512 GB of memory. It runs a Debian Linux.

3. Storage: There are several different places where data can be stored, here I review some of them, for the rest,
please refer to the documentation under https://www.ifi.uzh.ch/en/itinfrastructure.html
(which also includes some software that you might be interested in, for example Seafile)

  a) Your home directory is mounted to /home/user/USERNAME. This directory is backed up and should be used to store
  source code, plots, results, and so on. Since the capacity of this directory is limited, you should think twice whether
  you want to store larger data here.
     NOTE: If you do not see this directory after your first login to rolf, please ssh to the following server once:
     usernfs.ifi.uzh.ch. Afterward, the directory should have been created. If not, please contact technos@ifi.uzh.ch,
     and put me in cc.

  b) There are several scratch directories mounted to /srv/scratchN (N=1,...,6). This directory should be used for large
  temporary data, which is, for example, meant to be shared with other people. This directory will be automatically deleted
  regularly.

  c) The local hard drive is mounted to /local/scratch. If you need to store data that can be rapidly accessed
  (for example, training data for networks), this is where you should do it. This directory is not backed up,
  but it is stored on a RAID, so loss of data is very unlikely. The hard drive has 25GB of space.

  If you want to access b) or c), you can create a directory at the root of these. Please choose your USERNAME as
  the main directory and select the aiml group (via chgrp). You can select the access rights using the chmod.

4. Datasets: I have downloaded some datasets and stored them under /local/scratch/datasets. You should be able to read them,
if not, let me know. If you want to use a different dataset, please let me know, we can add more datasets here;
you will not have write access in this directory. Currently there is (besides others):

  a) ImageNet (2010 and 2012): /local/scratch/datasets/ImageNet/ILSVRC2012; Use the 2012 directory for the
  latest/current version

  b) CelebA: /local/scratch/datasets/CelebA; inside there are the original images (img_celeba),
  the original aligned images (img_align_celeba_png) and images the I have aligned to (224x224 pixels).

  c) Labeled Faces in the Wild (LFW): /local/scratch/datasets/LFW; Inside there are the original images
  (lfw) and the ones aligned with funneling (lfw_funneled) which should be used with the Bob.

  d) VGGFace2 can be used to train face recognition networks.

5. Editing files: There is no X-Server running on rolf. If you want to edit files on rolf,
you could rely on the vi or emacs editors. For Windows users,
there is also the possibility to use WinSCP (https://winscp.net/) to access files on the server.
It also allows to use your local Windows editor (for example Visual Studio Code) to edit files stored on rolf.
For Linux users there is surely a similar solution, but I can not give advice here.

6. Installations: For obvious reasons, you (and even I) have no rights to install any software on the server.
In order to install software for you, please use Conda. With Conda, you can make installations that are only valid
for yourself. Your conda installation can either be stored in your home directory, but you can also install it to
/local/scratch. In the unlikely case that you need to install software that is not available through conda,
please contact the admins (techno@ifi.uzh.ch) and put me in cc. When installing PyTorch,
make sure that you use the version developed for our CUDA version, which is 10.1,
cf: https://pytorch.org/get-started/locally/

7. Software and recommendations:

  a) When logging in to the machine, you will create a new shell each time.
  Anything running in the shell will be killed when you logout -- or when you get disconnected.
  Therefore, I would recommend that you run everything in "screen" sessions, which will survive a disconnection,
  cf. https://linuxize.com/post/how-to-use-linux-screen

  b) When running a job that takes long times (several hours) and many resources,
  you should reduce the priority of the process. You can do this by either starting the process already with low priority
  (via "nice -n 19 [command line]") or by increasing the niceness (reducing the priority) in the "top" (or "htop") window;
  you are not allowed to increase priority.

  c) Before running jobs that require several GPUs, please make sure that the GPUs are not currently in use by another user.
   You can use the "nvidia-smi" command to get the memory load and the workload of the GPUs
   (run "nvidia-smi" scarcely as it slows down the GPUs). If you see that your process requires low amounts of memory
   on many GPUs, please reduce the number of GPUs that you use and free them for other users.
   Use as few GPUs as required to fit your network and batch size in memory.

  d) Please consider that other users might also want to use the machine.
  Currently, I am not enforcing any limitations on the usage. Please think twice before using up many/all GPUs.
  If you run jobs with a longer duration, please make sure that you reduce the priority of your jobs, for example,
  using the nice command. However, if someone uses up all of the GPUs/Memory/CPUs for excessive amounts of time,
  you might send an email to that person (you might want to put me in cc); I have created a document with names
  and email addresses that can be found under /local/scratch/users.txt.

Finally, please note that a copy of these rules and recommendations can be found under rolf:/local/scratch/rules.txt
